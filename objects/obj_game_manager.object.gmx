<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//start randomize
randomize();

globalvar game_over;
game_over = false;

globalvar stage;
stage = 0; //dont pass 5
stage_phase = 0; //3 phases per stage

globalvar last_clicked;
last_clicked = noone;

//just to debug
globalvar debug;
debug = "";

//create a stopwatch
stopwatch = instance_create(32, obj_grid.y + obj_grid.sprite_width + 20, obj_stopwatch);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///recreate a new game stage

//set score
score += stage;

//set stage
//play 3 times at same stage
if(stage_phase &lt; 2){
    stage_phase += 1;
}
else{
    stage_phase = 0;
    if(stage &lt; 5){
        stage += 1;
    }
}

if(stopwatch.total_sec - stopwatch.atual_sec &gt;= 10){
    stopwatch.time_sec += 10;
    score += stage;
}

room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deselect last piece clicked and check won

if(room = rm_game){
    if(global.last_clicked != noone){
        global.last_clicked.is_clicked = false;
    }
    
    global.last_clicked = noone;
    
    //check if the player won
    if(grid_is_complete()){
        //set score
        score +=  1 + stage;
        
        //set stage
        //play 3 times each stage
        if(stage_phase &lt; 2){
            stage_phase += 1;
        }
        else{
            stage_phase = 0;
            if(stage &lt; 5){
                stage += 1;
            }
        }
        
        //set timer
        if(stopwatch.total_sec - stopwatch.atual_sec &gt;= 10){
            stopwatch.time_sec += 10;
        }
        else{
            stopwatch.time_sec += stopwatch.total_sec - stopwatch.atual_sec;
        }
        
        room_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///if game over reset timer and score
if(game_over){

    //reset score
    score = 0;
    
    //destroy the last clock and create another one
    with(obj_stopwatch){
        instance_destroy();
    }
    
    if(room == rm_game){
        stopwatch = instance_create(32, obj_grid.y + obj_grid.sprite_width + 20, obj_stopwatch);
    
        global.game_over = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw last clicked number
//draw_text(0,0, global.last_clicked)


//just debug
//draw_set_halign(fa_left);
//draw_text(1, 1, debug);

draw_set_halign(fa_center);
if(room == rm_game){
    draw_text_transformed(room_width/2, obj_grid.y - 50 ,"Score : " + string(score), 2, 2, image_angle);
    draw_sprite(sprCompLogo, 0, room_width/2, 60);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
