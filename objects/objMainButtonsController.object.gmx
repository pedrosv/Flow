<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// CREATE VARIABLES
global.sound=true;
global.pause=false;

// CREATE BUTTONS AND ASSIGN POSITIONS
buttons[0]=instance_create(100,100,objMainButton);
buttons[1]=instance_create(100,200,objMainButton);
buttons[2]=instance_create(100,300,objMainButton);

for (var i = 0; i&lt;=(array_length_1d(buttons)-1); i++)
{
    with buttons[i]{
        clicked=false;
        
        // ASSIGN SPRITES
        switch(i)
        {
            case 0:
                sprite_normal=sprGoPrice;
                sprite_over=sprGoPriceO;
                break;
            
            case 1:
                sprite_normal=sprGoPrice;
                sprite_over=sprGoPriceO;
                break;
            
            case 2:
                sprite_normal=sprGoPrice;
                sprite_over=sprGoPriceO;
                break;
                
            default:
                break;
        }
        sprite_index=sprite_normal
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = 0; i&lt;=(array_length_1d(buttons)-1); i++)
{
    with buttons[i]{
        if (clicked)
        {
            // ASSIGN BEHAVIOUR ON CLICK
            switch(i)
            {
                case 0:
                    global.sound=!global.sound;
                    break;
                
                case 1:
                    global.pause=!global.pause;
                    break;
                
                case 2:
                    // Do other stuff
                    break;
                    
                default:
                    break;
            }
        }
        click=false;
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
